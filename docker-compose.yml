# services:
#   cassandra:
#     image: cassandra:3.11
#     container_name: temporal-cassandra
#     ports:
#       - "9042:9042"
#     networks:
#       - ingest-net
#     healthcheck:
#       test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
#       interval: 10s
#       retries: 10
#     volumes:
#       - cassandra_data:/var/lib/cassandra

#   temporal:
#     image: temporalio/auto-setup:1.20.0
#     container_name: temporal
#     depends_on:
#       cassandra:
#         condition: service_healthy
#     environment:
#       - DB=cassandra
#       - CASSANDRA_SEEDS=cassandra:9042
#       - VISIBILITY_STORE=cassandra
#       - VISIBILITY_CASSANDRA_SEEDS=cassandra:9042
#     ports:
#       - "7233:7233"
#     networks:
#       - ingest-net
#     restart: on-failure

#   temporal-ui:
#     image: temporalio/ui:latest
#     container_name: temporal-ui
#     environment:
#       - TEMPORAL_ADDRESS=temporal:7233
#     ports:
#       - "8233:8233"
#     depends_on:
#       - temporal
#     networks:
#       - ingest-net

#   milvus:
#     image: milvusdb/milvus:v2.2.14
#     container_name: milvus
#     command: ["milvus", "run", "standalone"]
#     ports:
#       - "19530:19530"
#       - "9091:9091"
#     volumes:
#       - ./volumes/milvus:/var/lib/milvus
#     networks:
#       - ingest-net
#     restart: on-failure

#   worker:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: worker
#     init: true 
#     env_file:
#       - .env 
#     environment:
#       - MILVUS_HOST=milvus
#       - MILVUS_PORT=19530
#       - MILVUS_COLLECTION=documents
#       - COHERE_API_KEY=${COHERE_API_KEY}
#       - PYTHONUNBUFFERED=1
#     volumes:
#       - ./src:/app/src
#       - ./requirements.txt:/app/requirements.txt
#       - ./wait-for-it.sh:/wait-for-it.sh
#     depends_on:
#       - temporal
#       - milvus
#     networks:
#       - ingest-net
#     restart: on-failure

# volumes:
#   cassandra_data:

# networks:
#   ingest-net:
#     driver: bridge



# services:
#   cassandra:
#     image: cassandra:3.11
#     container_name: temporal-cassandra
#     ports:
#       - "9042:9042"
#     networks:
#       - ingest-net
#     healthcheck:
#       test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
#       interval: 10s
#       retries: 10
#     volumes:
#       - cassandra_data:/var/lib/cassandra

#   temporal:
#     image: temporalio/auto-setup:1.20.0
#     container_name: temporal
#     depends_on:
#       cassandra:
#         condition: service_healthy
#     environment:
#       - DB=cassandra
#       - CASSANDRA_SEEDS=cassandra:9042
#       - VISIBILITY_STORE=cassandra
#       - VISIBILITY_CASSANDRA_SEEDS=cassandra:9042
#     ports:
#       - "7233:7233"
#     networks:
#       - ingest-net
#     restart: on-failure

#   temporal-ui:
#     image: temporalio/ui:latest
#     container_name: temporal-ui
#     environment:
#       - TEMPORAL_ADDRESS=temporal:7233
#     ports:
#       - "8233:8233"
#     depends_on:
#       temporal:
#         condition: service_started
#     networks:
#       - ingest-net

#   milvus:
#     image: milvusdb/milvus:v2.2.14
#     container_name: milvus
#     command: ["milvus", "run", "standalone"]
#     ports:
#       - "19530:19530"
#       - "9091:9091"
#     volumes:
#       - ./volumes/milvus:/var/lib/milvus
#     networks:
#       - ingest-net
#     restart: on-failure

#   worker:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: worker
#     init: true
#     env_file:
#       - .env
#     environment:
#       - MILVUS_HOST=milvus
#       - MILVUS_PORT=19530
#       - MILVUS_COLLECTION=documents
#       - COHERE_API_KEY=${COHERE_API_KEY}
#       - PYTHONUNBUFFERED=1
#     volumes:
#       - ./src:/app/src
#       - ./requirements.txt:/app/requirements.txt
#       - ./wait-for-it.sh:/wait-for-it.sh
#     entrypoint: ["/start-worker.sh"]
#     depends_on:
#       temporal:
#         condition: service_started
#       milvus:
#         condition: service_started
#     networks:
#       - ingest-net
#     restart: on-failure

# volumes:
#   cassandra_data:

# networks:
#   ingest-net:
#     driver: bridge



services:
  cassandra:
    image: cassandra:3.11
    container_name: temporal-cassandra
    ports:
      - "9042:9042"
    networks:
      - ingest-net
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 10s
      retries: 10
    volumes:
      - cassandra_data:/var/lib/cassandra

  temporal:
    image: temporalio/auto-setup:1.20.0
    container_name: temporal
    depends_on:
      cassandra:
        condition: service_healthy
    environment:
      - DB=cassandra
      - CASSANDRA_SEEDS=cassandra:9042
      - VISIBILITY_STORE=cassandra
      - VISIBILITY_CASSANDRA_SEEDS=cassandra:9042
    ports:
      - "7233:7233"
    networks:
      - ingest-net
    restart: on-failure

  temporal-ui:
    image: temporalio/ui:latest
    container_name: temporal-ui
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    ports:
      - "8233:8233"
    depends_on:
      temporal:
        condition: service_started
    networks:
      - ingest-net

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: worker
    env_file:
      - .env
    environment:
      - COHERE_API_KEY=${COHERE_API_KEY}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./src:/app/src
      - ./requirements.txt:/app/requirements.txt
    entrypoint: ["python", "-u", "src/worker.py"]
    depends_on:
      temporal:
        condition: service_started
    networks:
      - ingest-net
    restart: on-failure

volumes:
  cassandra_data:

networks:
  ingest-net:
    driver: bridge
